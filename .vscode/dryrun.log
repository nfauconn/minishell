make --dry-run --always-make --keep-going --print-directory
make: Entering directory '/home/user42/minishGithub'
make -C ./libft
mkdir -p objs/
echo create: objs/main.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/main.c -o objs/main.o
mkdir -p objs/
echo create: objs/clear.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/clear.c -o objs/clear.o
mkdir -p objs/
echo create: objs/close.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/close.c -o objs/close.o
mkdir -p objs/
echo create: objs/error.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/error.c -o objs/error.o
mkdir -p objs/
echo create: objs/exit.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exit.c -o objs/exit.o
mkdir -p objs/
echo create: objs/init.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/init.c -o objs/init.o
mkdir -p objs/
echo create: objs/input.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/input.c -o objs/input.o
mkdir -p objs/
echo create: objs/prompt.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/prompt.c -o objs/prompt.o
mkdir -p objs/
echo create: objs/reset.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/reset.c -o objs/reset.o
mkdir -p objs/
echo create: objs/signals.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/signals.c -o objs/signals.o
mkdir -p objs/parsing/
echo create: objs/parsing/tokenizer.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/tokenizer.c -o objs/parsing/tokenizer.o
mkdir -p objs/parsing/
echo create: objs/parsing/token_utils.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/token_utils.c -o objs/parsing/token_utils.o
mkdir -p objs/parsing/
echo create: objs/parsing/types.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/types.c -o objs/parsing/types.o
mkdir -p objs/parsing/
echo create: objs/parsing/lexer.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/lexer.c -o objs/parsing/lexer.o
mkdir -p objs/parsing/
echo create: objs/parsing/expand.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/expand.c -o objs/parsing/expand.o
mkdir -p objs/parsing/
echo create: objs/parsing/expand_utils.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/expand_utils.c -o objs/parsing/expand_utils.o
mkdir -p objs/parsing/
echo create: objs/parsing/conv_to_cmd.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/conv_to_cmd.c -o objs/parsing/conv_to_cmd.o
mkdir -p objs/parsing/
echo create: objs/parsing/cmd_creat.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/cmd_creat.c -o objs/parsing/cmd_creat.o
mkdir -p objs/parsing/
echo create: objs/parsing/cmd_init.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/cmd_init.c -o objs/parsing/cmd_init.o
mkdir -p objs/parsing/
echo create: objs/parsing/parser.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/parser.c -o objs/parsing/parser.o
mkdir -p objs/parsing/
echo create: objs/parsing/utils_comparison.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/utils_comparison.c -o objs/parsing/utils_comparison.o
mkdir -p objs/parsing/
echo create: objs/parsing/utils_comparison2.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/parsing/utils_comparison2.c -o objs/parsing/utils_comparison2.o
mkdir -p objs/redirections/
echo create: objs/redirections/check_access.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/check_access.c -o objs/redirections/check_access.o
mkdir -p objs/redirections/
echo create: objs/redirections/heredoc_run.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/heredoc_run.c -o objs/redirections/heredoc_run.o
mkdir -p objs/redirections/
echo create: objs/redirections/heredoc_set.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/heredoc_set.c -o objs/redirections/heredoc_set.o
mkdir -p objs/redirections/
echo create: objs/redirections/open.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/open.c -o objs/redirections/open.o
mkdir -p objs/redirections/
echo create: objs/redirections/set_redir.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/set_redir.c -o objs/redirections/set_redir.o
 
mkdir -p objs/redirections/
echo create: objs/redirections/pipeline_red.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/pipeline_red.c -o objs/redirections/pipeline_red.o
mkdir -p objs/redirections/
echo create: objs/redirections/single_red.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/single_red.c -o objs/redirections/single_red.o
mkdir -p objs/redirections/
echo create: objs/redirections/utils.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/redirections/utils.c -o objs/redirections/utils.o
mkdir -p objs/exec/
echo create: objs/exec/cmd_execve.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/cmd_execve.c -o objs/exec/cmd_execve.o
mkdir -p objs/exec/
echo create: objs/exec/cmd_path.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/cmd_path.c -o objs/exec/cmd_path.o
mkdir -p objs/exec/
echo create: objs/exec/launch.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/launch.c -o objs/exec/launch.o
mkdir -p objs/exec/
echo create: objs/exec/launch_builtin.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/launch_builtin.c -o objs/exec/launch_builtin.o
mkdir -p objs/exec/
echo create: objs/exec/launch_pipeline.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/launch_pipeline.c -o objs/exec/launch_pipeline.o
mkdir -p objs/exec/
echo create: objs/exec/launch_single.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/launch_single.c -o objs/exec/launch_single.o
mkdir -p objs/exec/
echo create: objs/exec/wait.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/wait.c -o objs/exec/wait.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/cd.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/cd.c -o objs/exec/builtins/cd.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/echo.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/echo.c -o objs/exec/builtins/echo.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/env.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/env.c -o objs/exec/builtins/env.o
 
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/exit.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/exit.c -o objs/exec/builtins/exit.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/export.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/export.c -o objs/exec/builtins/export.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/pwd.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/pwd.c -o objs/exec/builtins/pwd.o
mkdir -p objs/exec/builtins/
echo create: objs/exec/builtins/unset.o
clang -Wall -Wextra -Werror  -MMD -I ./includes -I ./libft/includes -c ./srcs/exec/builtins/unset.c -o objs/exec/builtins/unset.o
clang -Wall -Wextra -Werror  -L ./libft -ltinfo -lreadline   ./objs/main.o  ./objs/clear.o  ./objs/close.o  ./objs/error.o  ./objs/exit.o  ./objs/init.o  ./objs/input.o  ./objs/prompt.o  ./objs/reset.o  ./objs/signals.o  ./objs/parsing/tokenizer.o  ./objs/parsing/token_utils.o  ./objs/parsing/types.o  ./objs/parsing/lexer.o  ./objs/parsing/expand.o  ./objs/parsing/expand_utils.o  ./objs/parsing/conv_to_cmd.o  ./objs/parsing/cmd_creat.o  ./objs/parsing/cmd_init.o  ./objs/parsing/parser.o  ./objs/parsing/utils_comparison.o  ./objs/parsing/utils_comparison2.o  ./objs/redirections/check_access.o  ./objs/redirections/heredoc_run.o  ./objs/redirections/heredoc_set.o  ./objs/redirections/open.o  ./objs/redirections/set_redir.o  ./objs/redirections/pipeline_red.o  ./objs/redirections/single_red.o  ./objs/redirections/utils.o  ./objs/exec/cmd_execve.o  ./objs/exec/cmd_path.o  ./objs/exec/launch.o  ./objs/exec/launch_builtin.o  ./objs/exec/launch_pipeline.o  ./objs/exec/launch_single.o  ./objs/exec/wait.o  ./objs/exec/builtins/cd.o  ./objs/exec/builtins/echo.o  ./objs/exec/builtins/env.o  ./objs/exec/builtins/exit.o  ./objs/exec/builtins/export.o  ./objs/exec/builtins/pwd.o  ./objs/exec/builtins/unset.o -o minishell -lft
echo "minishell created"
make: Leaving directory '/home/user42/minishGithub'
 
